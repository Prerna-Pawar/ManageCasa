// Generated by view binder compiler. Do not edit!
package com.example.managecasa.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.managecasa.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerSourceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView contact;

  @NonNull
  public final TextView contactno;

  @NonNull
  public final TextView date;

  @NonNull
  public final ImageView disallow;

  @NonNull
  public final TextView email;

  @NonNull
  public final TextView flat;

  @NonNull
  public final TextView flatno;

  @NonNull
  public final TextView fullname;

  @NonNull
  public final TextView mno;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView time;

  @NonNull
  public final TextView user;

  @NonNull
  public final TextView username;

  @NonNull
  public final ImageView verify;

  private RecyclerSourceBinding(@NonNull LinearLayout rootView, @NonNull TextView contact,
      @NonNull TextView contactno, @NonNull TextView date, @NonNull ImageView disallow,
      @NonNull TextView email, @NonNull TextView flat, @NonNull TextView flatno,
      @NonNull TextView fullname, @NonNull TextView mno, @NonNull TextView status,
      @NonNull TextView time, @NonNull TextView user, @NonNull TextView username,
      @NonNull ImageView verify) {
    this.rootView = rootView;
    this.contact = contact;
    this.contactno = contactno;
    this.date = date;
    this.disallow = disallow;
    this.email = email;
    this.flat = flat;
    this.flatno = flatno;
    this.fullname = fullname;
    this.mno = mno;
    this.status = status;
    this.time = time;
    this.user = user;
    this.username = username;
    this.verify = verify;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerSourceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerSourceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_source, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerSourceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contact;
      TextView contact = ViewBindings.findChildViewById(rootView, id);
      if (contact == null) {
        break missingId;
      }

      id = R.id.contactno;
      TextView contactno = ViewBindings.findChildViewById(rootView, id);
      if (contactno == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.disallow;
      ImageView disallow = ViewBindings.findChildViewById(rootView, id);
      if (disallow == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.flat;
      TextView flat = ViewBindings.findChildViewById(rootView, id);
      if (flat == null) {
        break missingId;
      }

      id = R.id.flatno;
      TextView flatno = ViewBindings.findChildViewById(rootView, id);
      if (flatno == null) {
        break missingId;
      }

      id = R.id.fullname;
      TextView fullname = ViewBindings.findChildViewById(rootView, id);
      if (fullname == null) {
        break missingId;
      }

      id = R.id.mno;
      TextView mno = ViewBindings.findChildViewById(rootView, id);
      if (mno == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      id = R.id.user;
      TextView user = ViewBindings.findChildViewById(rootView, id);
      if (user == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      id = R.id.verify;
      ImageView verify = ViewBindings.findChildViewById(rootView, id);
      if (verify == null) {
        break missingId;
      }

      return new RecyclerSourceBinding((LinearLayout) rootView, contact, contactno, date, disallow,
          email, flat, flatno, fullname, mno, status, time, user, username, verify);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
